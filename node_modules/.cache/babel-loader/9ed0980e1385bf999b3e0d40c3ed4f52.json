{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sbrim\\\\OneDrive\\\\Documents\\\\GitHub\\\\critter\\\\src\\\\components\\\\TweetDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../accessories/constants\";\n// import { Avatar } from \"./Posts/Post_BuildingBlocks/Avatar\";\n// import { PostActions } from \"./Posts/Post_BuildingBlocks/PostActions\";\n// import { PostContent } from \"./Posts/Post_BuildingBlocks/PostContent\";\nimport { LargePostFormat } from \"./Posts/LargePostFormat\";\nimport { LoadingScreen } from \"../accessories/LoadingScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TweetDetails = () => {\n  _s();\n  const {\n    tweetId\n  } = useParams();\n  const [viewedTweet, setViewedTweet] = useState(null);\n  useEffect(() => {\n    fetch(`/api/tweet/${tweetId}`).then(res => res.json()).then(data => {\n      setViewedTweet(data.tweet);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !viewedTweet ? /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TweetDetailsWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderWrapper, {\n        children: /*#__PURE__*/_jsxDEV(TweetHeader, {\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LargePostFormat, {\n        id: viewedTweet.id,\n        timestamp: viewedTweet.timestamp,\n        status: viewedTweet.status,\n        media: viewedTweet.media,\n        retweetFrom: viewedTweet.retweetFrom,\n        author: viewedTweet.author,\n        isLiked: viewedTweet.isLiked,\n        isRetweeted: viewedTweet.isRetweeted,\n        numLikes: viewedTweet.numLikes,\n        numRetweets: viewedTweet.numRetweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(TweetDetails, \"IcBxzyftPnkOZeKFgp3BWKU9AyE=\", false, function () {\n  return [useParams];\n});\n_c = TweetDetails;\nconst TweetDetailsWrapper = styled.div`\n  grid-area: mainContent;\n  max-height: 100vh;\n  max-width: 100vw;\n  display: flex;\n  background-color: ${COLORS.black};\n  flex-flow: column nowrap;\n  gap: 0.5rem;\n  border-top: none;\n  border-bottom: none;\n  overflow-x: visible;\n  overflow-y: scroll;\n  &&::-webkit-scrollbar {\n    display: none;\n  }\n`;\n_c2 = TweetDetailsWrapper;\nconst TweetHeader = styled.div`\n  border: 2px inset ${COLORS.DeepGreen};\n  margin-top: -0.5rem;\n  color: ${COLORS.offWhite2};\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-content: center;\n  padding: 1rem;\n  height: 50px;\n  width: 100%;\n  background-color: #00000080;\n  backdrop-filter: blur(3px);\n  z-index: 1;\n`;\n_c3 = TweetHeader;\nconst HeaderWrapper = styled.div`\n  width: 100%;\n  height: 3.5rem;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  grid-area: mainContent;\n  box-shadow: inset 0 0 10px #000000;\n`;\n_c4 = HeaderWrapper;\nexport default TweetDetails;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TweetDetails\");\n$RefreshReg$(_c2, \"TweetDetailsWrapper\");\n$RefreshReg$(_c3, \"TweetHeader\");\n$RefreshReg$(_c4, \"HeaderWrapper\");","map":{"version":3,"names":["React","useEffect","useState","useParams","styled","COLORS","LargePostFormat","LoadingScreen","TweetDetails","tweetId","viewedTweet","setViewedTweet","fetch","then","res","json","data","tweet","id","timestamp","status","media","retweetFrom","author","isLiked","isRetweeted","numLikes","numRetweets","TweetDetailsWrapper","div","black","TweetHeader","DeepGreen","offWhite2","HeaderWrapper"],"sources":["C:/Users/sbrim/OneDrive/Documents/GitHub/critter/src/components/TweetDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS } from \"../accessories/constants\";\r\n// import { Avatar } from \"./Posts/Post_BuildingBlocks/Avatar\";\r\n// import { PostActions } from \"./Posts/Post_BuildingBlocks/PostActions\";\r\n// import { PostContent } from \"./Posts/Post_BuildingBlocks/PostContent\";\r\nimport { LargePostFormat } from \"./Posts/LargePostFormat\";\r\nimport { LoadingScreen } from \"../accessories/LoadingScreen\";\r\n\r\nexport const TweetDetails = () => {\r\n  const { tweetId } = useParams();\r\n\r\n  const [viewedTweet, setViewedTweet] = useState(null);\r\n  useEffect(() => {\r\n    fetch(`/api/tweet/${tweetId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setViewedTweet(data.tweet);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {!viewedTweet ? (\r\n        <LoadingScreen />\r\n      ) : (\r\n        <TweetDetailsWrapper>\r\n          <HeaderWrapper>\r\n            <TweetHeader>Tweet</TweetHeader>\r\n          </HeaderWrapper>\r\n          <LargePostFormat\r\n            id={viewedTweet.id}\r\n            timestamp={viewedTweet.timestamp}\r\n            status={viewedTweet.status}\r\n            media={viewedTweet.media}\r\n            retweetFrom={viewedTweet.retweetFrom}\r\n            author={viewedTweet.author}\r\n            isLiked={viewedTweet.isLiked}\r\n            isRetweeted={viewedTweet.isRetweeted}\r\n            numLikes={viewedTweet.numLikes}\r\n            numRetweets={viewedTweet.numRetweets}\r\n          />\r\n        </TweetDetailsWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TweetDetailsWrapper = styled.div`\r\n  grid-area: mainContent;\r\n  max-height: 100vh;\r\n  max-width: 100vw;\r\n  display: flex;\r\n  background-color: ${COLORS.black};\r\n  flex-flow: column nowrap;\r\n  gap: 0.5rem;\r\n  border-top: none;\r\n  border-bottom: none;\r\n  overflow-x: visible;\r\n  overflow-y: scroll;\r\n  &&::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\nconst TweetHeader = styled.div`\r\n  border: 2px inset ${COLORS.DeepGreen};\r\n  margin-top: -0.5rem;\r\n  color: ${COLORS.offWhite2};\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  padding: 1rem;\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: #00000080;\r\n  backdrop-filter: blur(3px);\r\n  z-index: 1;\r\n`;\r\nconst HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  height: 3.5rem;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  grid-area: mainContent;\r\n  box-shadow: inset 0 0 10px #000000;\r\n`;\r\n\r\nexport default TweetDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,0BAA0B;AACjD;AACA;AACA;AACA,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,aAAa,QAAQ,8BAA8B;AAAC;AAAA;AAE7D,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;EAChC,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,EAAE;EAE/B,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpDD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAE,cAAaH,OAAQ,EAAC,CAAC,CAC3BI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdL,cAAc,CAACK,IAAI,CAACC,KAAK,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACE;IAAA,UACG,CAACP,WAAW,gBACX,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEjB,QAAC,mBAAmB;MAAA,wBAClB,QAAC,aAAa;QAAA,uBACZ,QAAC,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAoB;QAAA;QAAA;QAAA;MAAA,QAClB,eAChB,QAAC,eAAe;QACd,EAAE,EAAEA,WAAW,CAACQ,EAAG;QACnB,SAAS,EAAER,WAAW,CAACS,SAAU;QACjC,MAAM,EAAET,WAAW,CAACU,MAAO;QAC3B,KAAK,EAAEV,WAAW,CAACW,KAAM;QACzB,WAAW,EAAEX,WAAW,CAACY,WAAY;QACrC,MAAM,EAAEZ,WAAW,CAACa,MAAO;QAC3B,OAAO,EAAEb,WAAW,CAACc,OAAQ;QAC7B,WAAW,EAAEd,WAAW,CAACe,WAAY;QACrC,QAAQ,EAAEf,WAAW,CAACgB,QAAS;QAC/B,WAAW,EAAEhB,WAAW,CAACiB;MAAY;QAAA;QAAA;QAAA;MAAA,QACrC;IAAA;MAAA;MAAA;MAAA;IAAA;EAEL,iBACA;AAEP,CAAC;AAAC,GApCWnB,YAAY;EAAA,QACHL,SAAS;AAAA;AAAA,KADlBK,YAAY;AAsCzB,MAAMoB,mBAAmB,GAAGxB,MAAM,CAACyB,GAAI;AACvC;AACA;AACA;AACA;AACA,sBAAsBxB,MAAM,CAACyB,KAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAfIF,mBAAmB;AAgBzB,MAAMG,WAAW,GAAG3B,MAAM,CAACyB,GAAI;AAC/B,sBAAsBxB,MAAM,CAAC2B,SAAU;AACvC;AACA,WAAW3B,MAAM,CAAC4B,SAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAdIF,WAAW;AAejB,MAAMG,aAAa,GAAG9B,MAAM,CAACyB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAVIK,aAAa;AAYnB,eAAe1B,YAAY;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}