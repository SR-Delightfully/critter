{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sbrim\\\\OneDrive\\\\Documents\\\\GitHub\\\\critter\\\\src\\\\components\\\\CurrentUserContext.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentUserContext = /*#__PURE__*/createContext(null);\nexport const CurrentUserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    fetch(\"/api/me/profile\") // fetch Back End Server for current user's data\n    .then(res => res.json()).then(data => {\n      // Our data will give us access to an object that contains a single key/pair of 'profile'\n      setCurrentUser(data); // We need to update the currentUser, and set the status to idle.\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: {\n      currentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentUserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = CurrentUserProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentUserProvider\");","map":{"version":3,"names":["React","useEffect","createContext","useState","CurrentUserContext","CurrentUserProvider","children","currentUser","setCurrentUser","fetch","then","res","json","data"],"sources":["C:/Users/sbrim/OneDrive/Documents/GitHub/critter/src/components/CurrentUserContext.js"],"sourcesContent":["import React, { useEffect, createContext, useState } from \"react\";\r\n\r\nexport const CurrentUserContext = createContext(null);\r\nexport const CurrentUserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/me/profile\") // fetch Back End Server for current user's data\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // Our data will give us access to an object that contains a single key/pair of 'profile'\r\n        setCurrentUser(data); // We need to update the currentUser, and set the status to idle.\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </CurrentUserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAElE,OAAO,MAAMC,kBAAkB,gBAAGF,aAAa,CAAC,IAAI,CAAC;AACrD,OAAO,MAAMG,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEpDF,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,iBAAiB,CAAC,CAAC;IAAA,CACtBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAL,cAAc,CAACK,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,kBAAkB,CAAC,QAAQ;IAC1B,KAAK,EAAE;MACLN;IACF,CAAE;IAAA,UAEDD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACmB;AAElC,CAAC;AAAC,GArBWD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}